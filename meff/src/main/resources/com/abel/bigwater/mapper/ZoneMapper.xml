<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间，作用就是对sql进行分类化管理，即sql隔离
注意：使用mapper代理方法开发的话，namespace就有特殊重要的作用了,namespace=mapper接口地址
 -->
<mapper namespace="com.abel.bigwater.mapper.ZoneMapper">
    <select id="listZone" parameterType="com.abel.bigwater.api.MeterParam"
            resultType="com.abel.bigwater.model.zone.Zone">
        SELECT zoneId
             , zoneName
             , zoneType
             , dmaId
             , level
             , leafType
             , memo
             , bigMeterCount
             , resiMeterCount
             , onlineBigMeterCount
             , onlineResiMeterCount
             , ST_AsText(zoneLoc) AS zoneLoc
             , ST_AsText(zoneRegion) AS zoneRegion
             , firmId
             , leafable
             , createBy
             , createDate
             , updateBy
             , updateDate
        FROM bw_zone AS z
        <where>
            <if test="keywords != null">
                to_tsvector('parser_name', z.zoneName) @@ to_tsquery('parser_name', #{keywords})
            </if>
            <if test="pinyin != null">
                fetchPyzm(tsvector_to_array(to_tsvector('parser_name', z.zoneName)))
                @> tsvector_to_array(to_tsvector('parser_name', #{pinyin}))
            </if>

            <choose>
                <when test="zoneId != null">
                    AND zoneId LIKE #{zoneId}
                </when>
                <when test="zoneIdList != null and zoneIdList.size > 0">
                    AND zoneId IN
                    <foreach collection="zoneIdList" item="zid" open="(" separator="," close=")">
                        #{zid}
                    </foreach>
                </when>
            </choose>

            <if test="zoneName != null">
                AND zoneName LIKE #{zoneName}
            </if>

            <if test="firmId != null">
                AND firmId LIKE #{subFirmId}
            </if>
        </where>
    </select>

    <insert id="insertZone" parameterType="com.abel.bigwater.model.zone.Zone">
        INSERT INTO bw_zone(
                            zoneid
                            , zonename
                            , zonetype
                            , level
                            , leaftype
                            , memo
                            , bigmetercount
                            , resimetercount
                            , onlinebigmetercount
                            , onlineresimetercount
                            <include refid="zoneGeomFields"></include>
                            , firmid
                            , leafable
                            , createby
                            , createdate
                            , updateby
                            , updatedate
        ) VALUES (
                   #{zoneId}
                 , #{zoneName}
                 , #{zoneType}
                 , #{level}
                 , #{leafType}
                 , #{memo}
                 , #{bigMeterCount}
                 , #{resiMeterCount}
                 , #{onlineBigMeterCount}
                 , #{onlineResiMeterCount}
                 <include refid="zoneGeomValues"></include>
                 , #{firmId}
                 , #{leafable}
                 , #{createBy}
                 , Now()
                 , #{updateBy}
                 , Now()
        )
    </insert>

    <sql id="zoneGeomFields">
        <if test="zoneLoc != null">
            , zoneloc
        </if>
        <if test="zoneRegion != null">
            , zoneregion
        </if>
    </sql>
    <sql id="zoneGeomValues">
        <if test="zoneLoc != null">
            , ST_GeomFromText(#{zoneLoc})
        </if>
        <if test="zoneRegion != null">
            , ST_GeomFromText(#{zoneRegion})
        </if>
    </sql>
    
    <delete id="deleteZone" parameterType="com.abel.bigwater.api.MeterParam">
        DELETE FROM bw_zone AS z
        <where>
            zoneId = #{zoneId}

            <if test="zoneName != null">
                AND zoneName LIKE #{zoneName}
            </if>

            AND firmId LIKE #{subFirmId}
        </where>
    </delete>

    <update id="updateZone" parameterType="com.abel.bigwater.model.zone.Zone">
        UPDATE bw_zone
        <set>
            , zoneName = #{zoneName}
            , zoneType = #{zoneType}
            , level = #{level}
            , leafType = #{leafType}
            , memo = #{memo}
            , bigMeterCount = #{bigMeterCount}
            , resiMeterCount = #{resiMeterCount}
            , onlineBigMeterCount = #{onlineBigMeterCount}
            , onlineResiMeterCount = #{onlineResiMeterCount}
            <if test="zoneLoc != null">
                , ST_AsText = ST_GeomFromText(#{zoneLoc})
            </if>
            <if test="zoneRegion != null">
                , ST_AsText = ST_GeomFromText(#{zoneRegion})
            </if>
            , leafable = #{leafable}
            , updateBy = #{updateBy}
            , updateDate = NOW()
        </set>
        <where>
            zoneId = #{zoneId}
            AND firmId LIKE #{firmId}
        </where>
    </update>

    <select id="listZoneMeterRel" parameterType="com.abel.bigwater.api.MeterParam"
            resultType="com.abel.bigwater.model.zone.ZoneMeter">
        SELECT zoneId
        , meterId
        , flowOut
        , childType
        FROM bw_zone_meter
        <where>
            zoneId = #{zoneId}
            <if test="firmId != null">
                AND firmId LIKE #{firmId}
            </if>
        </where>
    </select>

    <update id="rebindZoneMeter" parameterType="com.abel.bigwater.api.MeterParam">
        UPDATE bw_zone_meter AS bzm
        SET flowOut = ml.flowOut
        , childType = ml.childType
        FROM (VALUES
                <foreach collection="meterList" separator="," item="m1">
                    (
                        #{m1.zoneId}
                        , #{m1.meterId}
                        , #{m1.flowOut}
                        , #{m1.childType}
                    )
                </foreach>
                          ) AS ml (
        zoneId
        , meterId
        , flowOut
        , childType
        )
        <where>
            bzm.zoneId = ml.zoneId
            AND bzm.meterId = ml.meterId
        </where>
    </update>

    <insert id="attachZoneMeter" parameterType="com.abel.bigwater.api.MeterParam">
        INSERT INTO bw_zone_meter(zoneid, meterid, flowout, childtype)
        SELECT zm.zoneId
            , zm.meterId
            , zm.flowOut
            , zm.childType
            FROM (
                VALUES
        <foreach collection="meterList" item="meter" separator=",">
            (
            #{meter.meterId}
            , #{zoneId}
            , #{meter.flowOut}
            , #{meter.childType}
            )
        </foreach>
        ) AS zm(meterId
        , zoneId
        , flowOut
        , childType)
        JOIN bw_meter m ON zm.meterId = m.meterId
        <where>
            zm.meterId NOT IN (
            SELECT meterId
            FROM bw_zone_meter bzm
            WHERE zoneId = #{zoneId}
            )
        </where>
    </insert>

    <delete id="detachZoneMeter" parameterType="com.abel.bigwater.api.MeterParam">
        DELETE FROM bw_zone_meter AS bzm
        USING bw_zone AS bz
        <where>
            bzm.zoneId = bz.zoneId
            <if test="firmId != null">
                AND bz.firmId LIKE #{subFirmId}
            </if>
            AND bzm.zoneId = #{zoneId}
            <if test="meterIdList != null and meterIdList.size > 0">
                AND bzm.meterId IN (
                <foreach collection="meterIdList" item="mid" separator=",">
                    #{mid}
                </foreach>
                )
            </if>
            <if test="excludeMeterIdList != null and excludeMeterIdList.size > 0">
                AND bzm.meterId NOT IN (
                <foreach collection="excludeMeterIdList" item="mid" separator=",">
                    #{mid}
                </foreach>
                )
            </if>
        </where>
    </delete>
</mapper>