<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间，作用就是对sql进行分类化管理，即sql隔离
注意：使用mapper代理方法开发的话，namespace就有特殊重要的作用了,namespace=mapper接口地址
 -->
<mapper namespace="com.abel.bigwater.mapper.DataMapper">
    <insert id="insertRealtime" parameterType="com.abel.bigwater.api.DataParam">
        insert into bw_data ( extId
        , sampletime
        , endTime
        , durationSecond
        , forwardSum
        , revertSum
        , pressure
        , pressureMin
        , pressureMax
        , pressureDigits
        , avgFlow
        , flowMax
        , flowMin
        , baseDigits
        , forwardDigits
        , revertDigits
        , literPulse
        , q0Sum
        , q1Sum
        , q2Sum
        , q3Sum
        , q4Sum
        , rssi
        , firmId)
        values
        <foreach collection="dataList" item="data" separator=",">
            ( #{data.extId}
            , #{data.sampleTime}
            , #{data.endTime}
            , #{data.durationSecond}
            , #{data.forwardSum}
            , #{data.revertSum}
            , #{data.pressure}
            , #{data.pressureMin}
            , #{data.pressureMax}
            , #{data.pressureDigits}
            , #{data.avgFlow}
            , #{data.flowMax}
            , #{data.flowMin}
            , #{data.baseDigits}
            , #{data.forwardDigits}
            , #{data.revertDigits}
            , #{data.literPulse}
            , #{data.q0Sum}
            , #{data.q1Sum}
            , #{data.q2Sum}
            , #{data.q3Sum}
            , #{data.q4Sum}
            , #{data.rssi}
            , #{data.firmId})
        </foreach>
    </insert>

    <update id="updateRealtime" parameterType="com.abel.bigwater.model.BwData">
        UPDATE bw_data
        SET endTime        = #{endTime}
          , durationSecond = #{durationSecond}
          , forwardSum     = #{forwardSum}
          , revertSum      = #{revertSum}
          , pressure       = #{pressure}
          , pressureMin    = #{pressureMin}
          , pressureMax    = #{pressureMax}
          , pressureDigits = #{pressureDigits}
          , avgFlow        = #{avgFlow}
          , flowMax        = #{flowMax}
          , flowMin        = #{flowMin}
          , baseDigits     = #{baseDigits}
          , forwardDigits  = #{forwardDigits}
          , revertDigits   = #{revertDigits}
          , literPulse     = #{literPulse}
          , q0sum          = #{q0Sum}
          , q1sum          = #{q1Sum}
          , q2sum          = #{q2Sum}
          , q3sum          = #{q3Sum}
          , q4sum          = #{q4Sum}
          , rssi           = #{rssi}
          , firmId         = #{firmId}
        WHERE extId = #{extId}
          AND sampleTime = #{sampleTime}
    </update>

    <select id="selectRealtime" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.BwData">
        SELECT m.meterId
        , r.extId
        , m.meterName
        , m.location
        , r.sampleTime
        , r.endTime
        , r.durationSecond
        , r.forwardSum
        , r.revertSum
        , r.pressure
        , r.forwardDigits
        , r.revertDigits
        , r.literPulse
        , r.pressureDigits
        , r.q0Sum
        , r.q1Sum
        , r.q2Sum
        , r.q3Sum
        , r.q4Sum
        , r.firmId
        , r.rssi
        , r.baseDigits
        , st_astext(m.meterLoc::geometry) AS meterLoc
        , dm.inOutput
        FROM bw_data r
        LEFT JOIN bw_meter m ON r.extId = m.extId
        LEFT JOIN bw_dma_meter dm ON r.extId = dm.dmaId
        LEFT JOIN bw_dma d ON dm.dmaId = d.dmaId
        <where>
            <choose>
                <when test="extId != null">
                    r.extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    r.extId IN
                    <foreach collection="extIdList" item="eid" open="(" close=")" separator=",">
                        #{eid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND r.sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND r.sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND r.sampleTime &lt; #{sampleTime2}
                </when>
                <when test="sampleTime != null">
                    AND r.sampleTime = #{sampleTime}
                </when>
            </choose>

            <choose>
                <when test="meterId != null">
                    AND m.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="dmaIdList != null and dmaIdList.size > 0">
                    AND d.dmaId IN
                    <foreach collection="dmaIdList" item="did" open="(" close=")" separator=",">
                        #{did}
                    </foreach>
                </when>
                <when test="dmaId != null">
                    AND m.dmaId LIKE #{dmaId}
                </when>
            </choose>

            <if test="firmId != null">
                AND (m.firmId IS NULL OR m.firmId LIKE #{firmId})
            </if>
        </where>
        ORDER BY m.meterId, r.extId, r.sampleTime
        LIMIT #{rows} OFFSET #{index}
    </select>

    <select id="checkDuplicateData" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.BwData">
        SELECT r.extId
        , r.sampleTime
        , r.endTime
        , r.durationSecond
        , r.forwardSum
        , r.revertSum
        , r.pressure
        , r.forwardDigits
        , r.revertDigits
        , r.literPulse
        , r.pressureDigits
        , r.q0Sum
        , r.q1Sum
        , r.q2Sum
        , r.q3Sum
        , r.q4Sum
        , r.firmId
        , r.rssi
        , r.baseDigits
        FROM bw_data r
        JOIN (VALUES
        <foreach collection="dataList" item="d1" separator=",">
            (#{d1.extId}
            , to_timestamp(#{d1.sampleTime}, 'YYYY-MM-DD HH24:MI:SS'))
        </foreach>
        )
        AS tmp (extId, sampleTime) ON tmp.extId = r.extId AND tmp.sampleTime = r.sampleTime
    </select>

    <select id="selectMeterRealtime" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.BwData">
        SELECT m.meterId
        , r.extId
        , m.meterName
        , m.location
        , r.sampleTime
        , r.endTime
        , r.durationSecond
        , r.forwardSum
        , r.revertSum
        , r.pressure
        , r.forwardDigits
        , r.revertDigits
        , r.literPulse
        , r.pressureDigits
        , r.q0Sum
        , r.q1Sum
        , r.q2Sum
        , r.q3Sum
        , r.q4Sum
        , r.firmId
        , r.rssi
        , r.baseDigits
        , st_astext(m.meterLoc::geometry) AS meterLoc
        FROM bw_data r
        JOIN (
        SELECT * FROM bw_meter
        <where>
            <choose>
                <when test="meterId != null">
                    meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND meterId IN
                    <foreach collection="meterIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>

                <when test="extId != null">
                    AND extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    AND extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>
        </where>
        ) m ON r.extId = m.extId
        <where>
            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND r.sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND r.sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND r.sampleTime &lt; #{sampleTime2}
                </when>
            </choose>
        </where>
        ORDER BY r.extId, r.sampleTime
        LIMIT #{rows} OFFSET #{index}
    </select>

    <select id="selectMeterRealtimeReverse" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.BwData">
        SELECT m.meterId
        , r.extId
        , m.meterName
        , m.location
        , r.sampleTime
        , r.endTime
        , r.durationSecond
        , r.forwardSum
        , r.revertSum
        , r.pressure
        , r.forwardDigits
        , r.revertDigits
        , r.literPulse
        , r.pressureDigits
        , r.q0Sum
        , r.q1Sum
        , r.q2Sum
        , r.q3Sum
        , r.q4Sum
        , r.firmId
        , r.rssi
        , r.baseDigits
        , st_astext(m.meterLoc::geometry) AS meterLoc
        FROM bw_data r
        JOIN (
        SELECT * FROM bw_meter
        <where>
            <choose>
                <when test="meterId != null">
                    meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND meterId IN
                    <foreach collection="meterIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>

                <when test="extId != null">
                    AND extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    AND extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>
        </where>
        ) m ON r.extId = m.extId
        <where>
            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND r.sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND r.sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND r.sampleTime &lt; #{sampleTime2}
                </when>
            </choose>
        </where>
        ORDER BY r.extId, r.sampleTime DESC
        LIMIT #{rows} OFFSET #{index}
    </select>

    <select id="selectRealtimeLast" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.BwData">
        SELECT m.meterId
        , r.extId
        , m.meterName
        , m.location
        , r.sampleTime
        , r.endTime
        , r.durationSecond
        , r.forwardSum
        , r.revertSum
        , r.pressure
        , r.forwardDigits
        , r.revertDigits
        , r.literPulse
        , r.pressureDigits
        , r.q0Sum
        , r.q1Sum
        , r.q2Sum
        , r.q3Sum
        , r.q4Sum
        , r.firmId
        , r.rssi
        , r.baseDigits
        , dm.inOutput
        , st_astext(m.meterLoc::geometry) AS meterLoc
        FROM bw_data r
        JOIN (
        SELECT extId
        , MAX(sampleTime) AS sampleTime
        FROM bw_data
        <where>
            <choose>
                <when test="extId != null">
                    AND extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    AND extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND sampleTime &lt; #{sampleTime2}
                </when>
            </choose>
        </where>
        GROUP BY extId
        ) rm ON r.extId = rm.extId AND r.sampleTime = rm.sampleTime
        JOIN bw_meter m ON r.extId = m.extId
        LEFT JOIN bw_dma_meter dm ON m.meterId = dm.meterId
        LEFT JOIN bw_dma d ON dm.dmaId = d.dmaId
        <where>
            <choose>
                <when test="meterId != null">
                    m.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="dmaIdList != null and dmaIdList.size > 0">
                    AND d.dmaId IN
                    <foreach collection="dmaIdList" item="did" open="(" close=")" separator=",">
                        #{did}
                    </foreach>
                </when>
                <when test="dmaId != null">
                    AND m.dmaId LIKE #{dmaId}
                </when>
            </choose>

            <if test="firmId != null">
                AND m.firmId LIKE #{firmId}
            </if>
        </where>
        ORDER BY r.sampleTime DESC, m.meterId, r.extId
        LIMIT #{rows} OFFSET #{index}
    </select>

    <select id="selectRealtimeHourly" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.BwData">
        SELECT m.meterId
        , r.extId
        , m.meterName
        , m.location
        , r.sampleTime
        , r.endTime
        , r.durationSecond
        , r.forwardSum
        , r.revertSum
        , r.pressure
        , r.forwardDigits
        , r.revertDigits
        , r.literPulse
        , r.pressureDigits
        , r.q0Sum
        , r.q1Sum
        , r.q2Sum
        , r.q3Sum
        , r.q4Sum
        , r.firmId
        , r.rssi
        , r.baseDigits
        , st_astext(m.meterLoc::geometry) AS meterLoc
        FROM bw_data r
        JOIN (
        SELECT r1.extId
        , MIN(r1.sampleTime) AS sampleTime
        FROM bw_data r1
        LEFT JOIN bw_meter m1 ON r1.extId = m1.extId
        <where>
            <choose>
                <when test="meterId != null">
                    AND m1.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m1.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <if test="firmId != null">
                AND (m1.firmId IS NULL OR m1.firmId LIKE #{firmId})
            </if>

            <choose>
                <when test="extId != null">
                    AND r1.extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    AND r1.extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND r1.sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND r1.sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND r1.sampleTime &lt; #{sampleTime2}
                </when>
            </choose>
        </where>
        GROUP BY r1.extId
        , date_trunc('hour', r1.sampleTime)
        ) rm ON r.extId = rm.extId AND r.sampleTime = rm.sampleTime
        LEFT JOIN bw_meter m ON r.extId = m.extId
        <where>
            <choose>
                <when test="meterId != null">
                    AND m.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <if test="firmId != null">
                AND (m.firmId IS NULL OR m.firmId LIKE #{firmId})
            </if>
        </where>
        ORDER BY r.sampleTime DESC, m.meterId, r.extId
        LIMIT #{rows} OFFSET #{index}
    </select>

    <select id="selectRealtimeHalf" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.BwData">
        SELECT m.meterId
        , r.extId
        , m.meterName
        , m.location
        , r.sampleTime
        , r.endTime
        , r.durationSecond
        , r.forwardSum
        , r.revertSum
        , r.pressure
        , r.forwardDigits
        , r.revertDigits
        , r.literPulse
        , r.pressureDigits
        , r.q0Sum
        , r.q1Sum
        , r.q2Sum
        , r.q3Sum
        , r.q4Sum
        , r.firmId
        , r.rssi
        , r.baseDigits
        , st_astext(m.meterLoc::geometry) AS meterLoc
        FROM bw_data r
        JOIN (
        SELECT r1.extId
        , MIN(r1.sampleTime) AS sampleTime
        FROM bw_data r1
        LEFT JOIN bw_meter m1 ON r1.extId = m1.extId
        <where>
            <choose>
                <when test="meterId != null">
                    AND m1.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m1.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <if test="firmId != null">
                AND (m1.firmId IS NULL OR m1.firmId LIKE #{firmId})
            </if>

            <choose>
                <when test="extId != null">
                    AND r1.extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    AND r1.extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND r1.sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND r1.sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND r1.sampleTime &lt; #{sampleTime2}
                </when>
            </choose>
        </where>
        GROUP BY r1.extId
        , date_trunc('hour', r1.sampleTime)
        , floor(date_part('minute', r1.sampleTime) / 30)
        ) rm ON r.extId = rm.extId AND r.sampleTime = rm.sampleTime
        LEFT JOIN bw_meter m ON r.extId = m.extId
        <where>
            <choose>
                <when test="meterId != null">
                    AND m.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <if test="firmId != null">
                AND (m.firmId IS NULL OR m.firmId LIKE #{firmId})
            </if>
        </where>
        ORDER BY r.sampleTime DESC, m.meterId, r.extId
        LIMIT #{rows} OFFSET #{index}
    </select>

    <select id="selectRealtimeQuarter" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.BwData">
        SELECT m.meterId
        , r.extId
        , m.meterName
        , m.location
        , r.sampleTime
        , r.endTime
        , r.durationSecond
        , r.forwardSum
        , r.revertSum
        , r.pressure
        , r.forwardDigits
        , r.revertDigits
        , r.literPulse
        , r.pressureDigits
        , r.q0Sum
        , r.q1Sum
        , r.q2Sum
        , r.q3Sum
        , r.q4Sum
        , r.firmId
        , r.rssi
        , r.baseDigits
        , st_astext(m.meterLoc::geometry) AS meterLoc
        FROM bw_data r
        JOIN (
        SELECT r1.extId
        , MIN(r1.sampleTime) AS sampleTime
        FROM bw_data r1
        LEFT JOIN bw_meter m1 ON r1.extId = m1.extId
        <where>
            <choose>
                <when test="meterId != null">
                    m1.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    m1.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <if test="firmId != null">
                AND (m1.firmId IS NULL OR m1.firmId LIKE #{firmId})
            </if>

            <choose>
                <when test="extId != null">
                    AND r1.extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    AND r1.extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND r1.sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND r1.sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND r1.sampleTime &lt; #{sampleTime2}
                </when>
            </choose>
        </where>
        GROUP BY r1.extId
        , date_trunc('hour', r1.sampleTime)
        , floor(date_part('minute', r1.sampleTime) / 15)
        ) rm ON r.extId = rm.extId AND r.sampleTime = rm.sampleTime
        LEFT JOIN bw_meter m ON r.extId = m.extId
        <where>
            <choose>
                <when test="meterId != null">
                    AND m.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <if test="firmId != null">
                AND (m.firmId IS NULL OR m.firmId LIKE #{firmId})
            </if>
        </where>
        ORDER BY r.sampleTime DESC, m.meterId, r.extId
        LIMIT #{rows} OFFSET #{index}
    </select>

    <select id="selectDmaRealtimeHourly" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.BwData">
        SELECT m.meterId
        , r.extId
        , m.meterName
        , m.location
        , r.sampleTime
        , r.endTime
        , r.durationSecond
        , r.forwardSum
        , r.revertSum
        , r.pressure
        , r.forwardDigits
        , r.revertDigits
        , r.literPulse
        , r.pressureDigits
        , r.q0Sum
        , r.q1Sum
        , r.q2Sum
        , r.q3Sum
        , r.q4Sum
        , r.firmId
        , r.rssi
        , r.baseDigits
        , dm.inOutput
        , st_astext(m.meterLoc::geometry) AS meterLoc
        FROM bw_data r
        JOIN (
        SELECT extId
        , MIN(sampleTime) AS sampleTime
        FROM bw_data
        <where>
            <choose>
                <when test="extId != null">
                    AND extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    AND extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND sampleTime &lt; #{sampleTime2}
                </when>
            </choose>
        </where>
        GROUP BY extId
        , date_trunc('hour', sampleTime)
        ) rm ON r.extId = rm.extId AND r.sampleTime = rm.sampleTime
        JOIN bw_meter m ON r.extId = m.extId
        LEFT JOIN bw_dma_meter dm ON m.meterId = dm.meterId
        LEFT JOIN bw_dma d ON dm.dmaId = d.dmaId
        <where>
            <choose>
                <when test="meterId != null">
                    m.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="dmaIdList != null and dmaIdList.size > 0">
                    AND d.dmaId IN
                    <foreach collection="dmaIdList" item="did" open="(" close=")" separator=",">
                        #{did}
                    </foreach>
                </when>
                <when test="dmaId != null">
                    AND m.dmaId LIKE #{dmaId}
                </when>
            </choose>

            <if test="firmId != null">
                AND m.firmId LIKE #{firmId}
            </if>
        </where>
        ORDER BY r.sampleTime DESC, m.meterId, r.extId
        LIMIT #{rows} OFFSET #{index}
    </select>

    <select id="selectZoneRealtimeHourly" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.BwData">
        SELECT m.meterId
        , r.extId
        , m.meterName
        , m.location
        , r.sampleTime
        , r.endTime
        , r.durationSecond
        , r.forwardSum
        , r.revertSum
        , r.pressure
        , r.forwardDigits
        , r.revertDigits
        , r.literPulse
        , r.pressureDigits
        , r.q0Sum
        , r.q1Sum
        , r.q2Sum
        , r.q3Sum
        , r.q4Sum
        , r.firmId
        , r.rssi
        , r.baseDigits
        , dm.inOutput
        , st_astext(m.meterLoc::geometry) AS meterLoc
        FROM bw_data r
        JOIN (
        SELECT extId
        , MIN(sampleTime) AS sampleTime
        FROM bw_data
        <where>
            <choose>
                <when test="extId != null">
                    AND extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    AND extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND sampleTime &lt; #{sampleTime2}
                </when>
            </choose>
        </where>
        GROUP BY extId
        , date_trunc('hour', sampleTime)
        ) rm ON r.extId = rm.extId AND r.sampleTime = rm.sampleTime
        JOIN bw_meter m ON r.extId = m.extId
        LEFT JOIN bw_zone_meter dm ON m.meterId = dm.meterId
        LEFT JOIN bw_zone d ON dm.zoneId = d.zoneId
        <where>
            <choose>
                <when test="meterId != null">
                    m.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="zoneIdList != null and zoneIdList.size > 0">
                    AND dm.zoneId IN
                    <foreach collection="zoneIdList" item="did" open="(" close=")" separator=",">
                        #{did}
                    </foreach>
                </when>
                <when test="zoneId != null">
                    AND dm.zoneId LIKE #{zoneId}
                </when>
            </choose>

            <if test="firmId != null">
                AND m.firmId LIKE #{firmId}
            </if>
        </where>
        ORDER BY r.sampleTime DESC, m.meterId, r.extId
        LIMIT #{rows} OFFSET #{index}
    </select>

    <select id="countDeleteRealtime" parameterType="com.abel.bigwater.api.DataParam"
            resultType="int">
        SELECT COUNT(1) AS countRealtime
        FROM bw_data r
        LEFT JOIN bw_meter m ON r.extId = m.extId
        <where>
            <choose>
                <when test="extId != null">
                    AND r.extId = #{extId}
                </when>
                <otherwise>
                    AND r.extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </otherwise>
            </choose>

            AND r.sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}

            <choose>
                <when test="meterId != null">
                    m.meterId LIKE #{meterId}
                </when>
                <otherwise>
                    AND m.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </otherwise>
            </choose>

            <if test="firmId != null">
                m.firmId LIKE #{firmId}
            </if>
        </where>
    </select>

    <delete id="deleteRealtime" parameterType="com.abel.bigwater.api.DataParam">
        DELETE
        FROM bw_data
        <where>
            extId = #{extId}
            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <otherwise>
                    AND sampleTime = #{sampleTime}
                </otherwise>
            </choose>
        </where>
    </delete>

    <select id="realtimeDateRange" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.DataRange">
        SELECT m.meterId
        , r.extId
        , MIN(r.sampleTime) AS minTime
        , MAX(r.sampleTime) AS maxTime
        , COUNT(1) AS dataRows
        , MIN(r.dataId) AS minDataId
        , MAX(r.dataId) AS maxDataId
        FROM bw_data r
        LEFT JOIN bw_meter m ON (r.extId = m.extId)
        <where>
            <choose>
                <when test="meterId != null">
                    AND m.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <if test="firmId != null">
                AND (m.firmId IS NULL OR m.firmId LIKE #{firmId})
            </if>

            <choose>
                <when test="extId != null">
                    AND r.extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    AND r.extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND r.sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND r.sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND r.sampleTime &lt; #{sampleTime2}
                </when>
            </choose>
        </where>
        GROUP BY m.meterId
                 , r.extId
    </select>

    <select id="realtimeDateRangeZone" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.DataRange">
        SELECT dm.zoneId
        , d.zoneName
        , MIN(r.sampleTime) AS minTime
        , MAX(r.sampleTime) AS maxTime
        , COUNT(1) AS dataRows
        , MIN(r.dataId) AS minDataId
        , MAX(r.dataId) AS maxDataId
        FROM bw_data r
        JOIN bw_meter m ON (r.extId = m.extId)
        JOIN bw_zone_meter dm ON m.meterId = dm.meterId
        LEFT JOIN bw_zone d ON dm.zoneId = d.zoneId
        <where>
            <choose>
                <when test="extId != null">
                    AND r.extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    AND r.extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND sampleTime &lt; #{sampleTime2}
                </when>
            </choose>

            <choose>
                <when test="meterId != null">
                    m.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="zoneIdList != null and zoneIdList.size > 0">
                    AND dm.zoneId IN
                    <foreach collection="zoneIdList" item="did" open="(" close=")" separator=",">
                        #{did}
                    </foreach>
                </when>
                <when test="zoneId != null">
                    AND dm.zoneId LIKE #{zoneId}
                </when>
            </choose>

            <if test="firmId != null">
                AND m.firmId LIKE #{firmId}
            </if>
        </where>
    </select>

    <select id="realtimeDateRangeDma" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.DataRange">
        SELECT dm.dmaId
        , d.dmaName
        , MIN(r.sampleTime) AS minTime
        , MAX(r.sampleTime) AS maxTime
        , COUNT(1) AS dataRows
        , MIN(r.dataId) AS minDataId
        , MAX(r.dataId) AS maxDataId
        FROM bw_data r
        JOIN bw_meter m ON (r.extId = m.extId)
        JOIN bw_dma_meter dm ON m.meterId = dm.meterId
        LEFT JOIN bw_dma d ON dm.dmaId = d.dmaId
        <where>
            <choose>
                <when test="extId != null">
                    AND r.extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    AND r.extId IN
                    <foreach collection="extIdList" index="idx" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND sampleTime &lt; #{sampleTime2}
                </when>
            </choose>

            <choose>
                <when test="meterId != null">
                    m.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND m.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="dmaIdList != null and dmaIdList.size > 0">
                    AND d.dmaId IN
                    <foreach collection="dmaIdList" item="did" open="(" close=")" separator=",">
                        #{did}
                    </foreach>
                </when>
                <when test="dmaId != null">
                    AND m.dmaId LIKE #{dmaId}
                </when>
            </choose>

            <if test="firmId != null">
                AND m.firmId LIKE #{firmId}
            </if>
        </where>
    </select>

    <select id="listMeterDayCount" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.MeterDayDataCount">
        SELECT bm.meterId
        , bm.meterName
        , bm.firmId
        , bd.extId
        , date_trunc('Day', bd.sampletime) AS day1
        , date_part('Day', bd.sampletime) AS dayInt
        , COUNT(1) AS day1Count
        FROM bw_data bd
        LEFT JOIN bw_meter bm on bd.extid = bm.extid
        <where>
            <choose>
                <when test="extId != null">
                    bd.extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    bd.extId IN
                    <foreach collection="extIdList" item="eid" open="(" close=")" separator=",">
                        #{eid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND bd.sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND bd.sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND bd.sampleTime &lt; #{sampleTime2}
                </when>
                <when test="sampleTime != null">
                    AND bd.sampleTime = #{sampleTime}
                </when>
            </choose>

            <choose>
                <when test="meterId != null">
                    AND bm.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND bm.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <if test="firmId != null">
                AND (bm.firmId IS NULL OR bm.firmId LIKE #{firmId})
            </if>
        </where>
        GROUP BY bm.meterId
        , bm.meterName
        , bm.firmId
        , bd.extId
        , date_trunc('Day', bd.sampletime)
        , date_part('Day', bd.sampletime)
        ORDER BY bm.meterId
        , bd.extId
        , day1 DESC
        LIMIT #{rows} OFFSET #{index}
    </select>

    <select id="listMeterHourCount" parameterType="com.abel.bigwater.api.DataParam"
            resultType="com.abel.bigwater.model.MeterHourDataCount">
        SELECT bm.meterId
        , bm.meterName
        , bm.firmId
        , bd.extId
        , date_trunc('Hour', bd.sampletime) AS statDay
        , date_part('Hour', bd.sampletime) AS hourInt
        , COUNT(1) AS cnt1
        FROM bw_data bd
        LEFT JOIN bw_meter bm on bd.extid = bm.extid
        <where>
            <choose>
                <when test="extId != null">
                    bd.extId LIKE #{extId}
                </when>
                <when test="extIdList != null and extIdList.size > 0">
                    bd.extId IN
                    <foreach collection="extIdList" item="eid" open="(" close=")" separator=",">
                        #{eid}
                    </foreach>
                </when>
            </choose>

            <choose>
                <when test="sampleTime1 != null and sampleTime2 != null">
                    AND bd.sampleTime BETWEEN #{sampleTime1} AND #{sampleTime2}
                </when>
                <when test="sampleTime1 != null">
                    AND bd.sampleTime &gt;= #{sampleTime1}
                </when>
                <when test="sampleTime2 != null">
                    AND bd.sampleTime &lt; #{sampleTime2}
                </when>
                <when test="sampleTime != null">
                    AND bd.sampleTime = #{sampleTime}
                </when>
            </choose>

            <choose>
                <when test="meterId != null">
                    AND bm.meterId LIKE #{meterId}
                </when>
                <when test="meterIdList != null and meterIdList.size > 0">
                    AND bm.meterId IN
                    <foreach collection="meterIdList" item="mid" open="(" close=")" separator=",">
                        #{mid}
                    </foreach>
                </when>
            </choose>

            <if test="firmId != null">
                AND (bm.firmId IS NULL OR bm.firmId LIKE #{firmId})
            </if>
        </where>
        GROUP BY bm.meterId
        , bm.meterName
        , bm.firmId
        , bd.extId
        , date_trunc('Hour', bd.sampletime)
        , date_part('Hour', bd.sampletime)
        ORDER BY bm.meterId
        , bd.extId
        , statDay DESC
        , hourInt
        LIMIT #{rows} OFFSET #{index}
    </select>
</mapper>