<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间，作用就是对sql进行分类化管理，即sql隔离
注意：使用mapper代理方法开发的话，namespace就有特殊重要的作用了,namespace=mapper接口地址
 -->
<mapper namespace="com.abel.bigwater.mapper.ConfigMapper">
    <select id="configList" resultType="com.abel.bigwater.model.BwConfig">
        SELECT groupId
        , configId
        , value
        , configName
        , configType
        , configDesc
        , c.firmId
        , f.firmName
        , c.createBy
        , c.createDate
        , c.updateBy
        , c.updateDate
        FROM bwconfig c LEFT JOIN bwfirm f ON c.firmid = f.firmid
        <where>
            <if test="configId != null">
                c.configId = #{configId}
            </if>
            <if test="firmId != null">
                AND c.firmId LIKE #{firmId}
            </if>
            <if test="groupId != null">
                AND groupId = #{groupId}
            </if>
        </where>
    </select>

    <update id="updateConfig" parameterType="com.abel.bigwater.model.BwConfig">
        UPDATE BwConfig
        <set>
            value = #{value}
            <if test="configName != null">
                , configName = #{configName}
            </if>
            <if test="configType != null">
                , configType = #{configType}
            </if>
            <if test="configDesc != null">
                , configDesc = #{configDesc}
            </if>
            , updateBy = #{updateBy}
            , updateDate = current_timestamp
        </set>
        <where>
            configId = #{configId}
            <if test="firmId != null">
                AND firmId LIKE #{firmId}
            </if>
            <if test="groupId != null">
                AND groupId = #{groupId}
            </if>
        </where>
    </update>

    <delete id="deleteConfig" parameterType="com.abel.bigwater.model.BwConfig">
        DELETE FROM BwConfig
        WHERE configId = #{configId}
          AND firmId = #{firmId}
    </delete>

    <insert id="insertConfig" parameterType="com.abel.bigwater.model.BwConfig">
        INSERT INTO BwConfig(configId, groupId, configName,
            configType, configDesc, value, firmId
            , createBy, createDate)
        VALUES(#{configId}, #{groupId}, #{configName},
               #{configType}, #{configDesc}, #{value}, #{firmId}
               , #{createBy}, current_timestamp)
    </insert>

    <select id="selectFirm" resultType="com.abel.bigwater.model.BwFirm">
        SELECT firmId
        ,firmName
        ,firmLoc
        ,firmRegion
        ,grade
        ,smallIcon
        ,largeIcon
        ,addr
        ,postcode
        ,contact
        ,phone
        ,phone2
        ,fax
        ,email
        ,memo
        ,preinit
        FROM BwFirm
        <where>
            <if test='firmId != null'>
                firmId LIKE #{firmId}
            </if>
            <if test='keywords != null'>
                AND MATCH(firmId, firmName) AGAINST (#{keywords} IN BOOLEAN MODE)
            </if>
        </where>
    </select>

    <insert id="addFirm" parameterType="com.abel.bigwater.model.BwFirm">
        INSERT INTO BwFirm(firmId, firmName
                           <include refid="firmFields"></include>
                           ,grade
                           ,smallIcon
                           ,largeIcon
                           ,addr
                           ,postcode
                           ,contact
                           ,phone
                           ,phone2
                           ,fax
                           ,email
                           ,preinit)
        VALUES(#{firmId}, #{firmName}
              <include refid="firmValues"></include>
              , #{grade}
              , #{smallIcon}
              , #{largeIcon}
              , #{addr}
              , #{postcode}
              , #{contact}
              , #{phone}
              , #{phone2}
              , #{fax}
              , #{email}
              , 0)
    </insert>

    <sql id="firmFields">
        <trim suffixOverrides=",">
            <if test="firmLoc != null">
                , firmLoc
            </if>
            <if test="firmRegion != null">
                , firmRegion
            </if>
            <if test="memo != null">
                , memo
            </if>
        </trim>
    </sql>

    <sql id="firmValues">
        <trim suffixOverrides=",">
            <if test="firmLoc != null">
                , geometry::STGeomFromText(#{firmLoc}, 0)
            </if>
            <if test="firmRegion != null">
                , geometry::STGeomFromText(#{firmRegion}, 0)
            </if>
            <if test="memo != null">
                , #{memo}
            </if>
        </trim>

    </sql>

    <delete id="deleteFirm">
        DELETE FROM BwFirm
        WHERE firmId = #{firmId}
        AND preinit = 0
    </delete>

    <update id="updateFirm" parameterType="com.abel.bigwater.model.BwFirm">
        UPDATE BwFirm
        <set>
            <if test='firmName != null'>
                firmName = #{firmName}
            </if>
            <if test='firmLoc != null'>
                , firmLoc = geometry::STGeomFromText(#{firmLoc}, 0)
            </if>
            <if test='firmRegion != null'>
                , firmRegion = geometry::STGeomFromText(#{firmRegion}, 0)
            </if>
            <if test='grade != null'>
                ,grade = #{grade}
            </if>
            <if test='smallIcon != null'>
                ,smallIcon = #{smallIcon}
            </if>
            <if test='largeIcon != null'>
                ,largeIcon = #{largeIcon}
            </if>
            <if test='addr != null'>
                ,addr = #{addr}
            </if>
            <if test="postcode != null">
                ,postcode = #{postcode}
            </if>
            <if test='contact != null'>
                ,contact = #{contact}
            </if>
            <if test='phone != null'>
                ,phone = #{phone}
            </if>
            <if test='phone2 != null'>
                ,phone2 = #{phone2}
            </if>
            <if test='fax != null'>
                ,fax = #{fax}
            </if>
            <if test='email != null'>
                ,email = #{email}
            </if>
            <if test='memo != null'>
                ,memo = #{memo}
            </if>
        </set>
        WHERE firmId = #{firmId}
    </update>
</mapper>