<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间，作用就是对sql进行分类化管理，即sql隔离
注意：使用mapper代理方法开发的话，namespace就有特殊重要的作用了,namespace=mapper接口地址
 -->
<mapper namespace="com.abel.bigwater.mapper.ConfigMapper">
    <select id="configList" resultType="com.abel.bigwater.model.BwConfig">
        SELECT group_id AS groupId,
        config_id AS configId,
        config_value AS value,
        config_name AS configName,
        config_type AS configType,
        config_desc AS configDesc,
        c.firm_id AS firmId,
        f.firm_name AS firmName
        , create_by AS createBy
        , create_date AS createDate
        , update_by AS updateBy
        , update_date AS updateDate
        FROM bw_config c LEFT JOIN bw_firm f ON c.firm_id = f.firm_id
        <where>
            <if test="configId != null">
                config_id = #{configId}
            </if>
            <if test="firmId != null">
                AND c.firm_id LIKE #{firmId}
            </if>
            <if test="groupId != null">
                AND group_id = #{groupId}
            </if>
        </where>
    </select>

    <update id="updateConfig" parameterType="com.abel.bigwater.model.BwConfig">
        UPDATE bw_config
        <set>
            config_value = #{value}
            <if test="configName != null">
                , config_name = #{configName}
            </if>
            <if test="configType != null">
                , config_type = #{configType}
            </if>
            <if test="configDesc != null">
                , config_desc = #{configDesc}
            </if>
            , update_by = #{updateBy}
            , update_date = GETDATE()
        </set>
        <where>
            config_id = #{configId}
            <if test="firmId != null">
                AND firm_id LIKE #{firmId}
            </if>
            <if test="groupId != null">
                AND group_id = #{groupId}
            </if>
        </where>
    </update>

    <delete id="deleteConfig" parameterType="com.abel.bigwater.model.BwConfig">
        DELETE bw_config
        WHERE config_id = #{configId}
          AND firm_id = #{firmId}
    </delete>

    <insert id="insertConfig" parameterType="com.abel.bigwater.model.BwConfig">
        INSERT INTO bw_config(config_id, group_id, config_name,
                              config_type, config_desc, config_value, firm_id
            , create_by, create_date)
        VALUES(#{configId}, #{groupId}, #{configName},
               #{configType}, #{configDesc}, #{value}, #{firmId}
                  , #{createBy}, GETDATE())
    </insert>

    <select id="selectFirm" resultType="com.abel.bigwater.model.BwFirm">
        SELECT firm_id as id,
        firm_name as name,
        firm_loc.STAsText() AS firmLoc,
        firm_region.STAsText() AS firmRegion
        ,[firm_grade] AS grade
        ,[small_icon] AS smallIcon
        ,[large_icon] AS largeIcon
        ,[firm_addr] AS addr
        ,[postcode]
        ,[firm_contact] AS contact
        ,[firm_phone] AS phone
        ,[firm_phone2] AS phone2
        ,[firm_fax] AS fax
        ,[firm_email] AS email
        ,[firm_memo] AS memo
        ,[preinit]
        FROM bw_firm
        <where>
            <if test='firmId != null'>
                firm_id LIKE #{firmId}
            </if>
            <if test='keywords != null'>
                AND MATCH(firm_id, firm_name) AGAINST (#{keywords} IN BOOLEAN MODE)
            </if>
        </where>
    </select>

    <insert id="addFirm" parameterType="com.abel.bigwater.model.BwFirm">
        INSERT INTO bw_firm(firm_id, firm_name
                           <include refid="firmFields"></include>
                           ,[firm_grade]
                           ,[small_icon]
                           ,[large_icon]
                           ,[firm_addr]
                           ,[postcode]
                           ,[firm_contact]
                           ,[firm_phone]
                           ,[firm_phone2]
                           ,[firm_fax]
                           ,[firm_email]
                           ,[preinit])
        VALUES(#{id}, #{name}
              <include refid="firmValues"></include>
              , #{grade}
              , #{smallIcon}
              , #{largeIcon}
              , #{addr}
              , #{postcode}
              , #{contact}
              , #{phone}
              , #{phone2}
              , #{fax}
              , #{email}
              , 0)
    </insert>

    <sql id="firmFields">
        <trim suffixOverrides=",">
            <if test="firmLoc != null">
                , firm_loc
            </if>
            <if test="firmRegion != null">
                , firm_region
            </if>
            <if test="memo != null">
                , [firm_memo]
            </if>
        </trim>
    </sql>

    <sql id="firmValues">
        <trim suffixOverrides=",">
            <if test="firmLoc != null">
                , geometry::STGeomFromText(#{firmLoc}, 0)
            </if>
            <if test="firmRegion != null">
                , geometry::STGeomFromText(#{firmRegion}, 0)
            </if>
            <if test="memo != null">
                , #{memo}
            </if>
        </trim>

    </sql>

    <delete id="deleteFirm">
        DELETE FROM bw_firm
        WHERE firm_id = #{firmId}
        AND preinit = 0
    </delete>

    <update id="updateFirm" parameterType="com.abel.bigwater.model.BwFirm">
        UPDATE bw_firm
        <set>
            <if test='name != null'>
                firm_name = #{name}
            </if>
            <if test='firmLoc != null'>
                , firm_loc = geometry::STGeomFromText(#{firmLoc}, 0)
            </if>
            <if test='firmRegion != null'>
                , firm_region = geometry::STGeomFromText(#{firmRegion}, 0)
            </if>
            <if test='grade != null'>
                ,[firm_grade] = #{grade}
            </if>
            <if test='smallIcon != null'>
                ,[small_icon] = #{smallIcon}
            </if>
            <if test='largeIcon != null'>
                ,[large_icon] = #{largeIcon}
            </if>
            <if test='addr != null'>
                ,[firm_addr] = #{addr}
            </if>
            <if test="postcode != null">
                ,postcode = #{postcode}
            </if>
            <if test='contact != null'>
                ,[firm_contact] = #{contact}
            </if>
            <if test='phone != null'>
                ,[firm_phone] = #{phone}
            </if>
            <if test='phone2 != null'>
                ,[firm_phone2] = #{phone2}
            </if>
            <if test='fax != null'>
                ,[firm_fax] = #{fax}
            </if>
            <if test='email != null'>
                ,[firm_email] = #{email}
            </if>
            <if test='memo != null'>
                ,[firm_memo] = #{memo}
            </if>
        </set>
        WHERE firm_id = #{id}
    </update>
</mapper>